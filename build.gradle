apply plugin: 'de.gliderpilot.semantic-release'
apply plugin: 'com.github.rzabini.gradle-jython'


apply from: 'gradle/compile.gradle'
/*apply from: 'gradle/publishing.gradle'
apply from: 'gradle/code-quality.gradle'
apply from: 'gradle/code-coverage.gradle'
apply from: 'gradle/publish-plugin.gradle'*/

buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "de.gliderpilot.gradle.semantic-release:gradle-semantic-release-plugin:1.1.2"
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'
        classpath "ru.vyarus:gradle-quality-plugin:1.0.2"
        classpath 'net.saliman:gradle-cobertura-plugin:2.2.8'
        classpath "com.gradle.publish:plugin-publish-plugin:0.9.2"
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.4.0'
        classpath "gradle.plugin.com.github.rzabini:gradle-jython:1.0.1"
    }
}

group 'com.github.rzabini'

release {
    versionStrategy org.ajoberstar.gradle.git.release.semver.RebuildVersionStrategy.INSTANCE
}

repositories {
    mavenLocal()
    jcenter()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies{
	compile gradleApi()

    compile "gradle.plugin.com.github.rzabini:gradle-jython:1.0.1"

    testCompile 'org.spockframework:spock-core:1.0-groovy-2.3',
            {exclude module: "groovy-all"}

	testCompile 'com.netflix.nebula:nebula-test:3.1.0', {
		exclude module: 'groovy-all'
	}
}

def packages=['Sphinx:1.3.1',
              'Jinja2:2.7.3',
              'MarkupSafe:0.23',
              'Pygments:2.0.1',
              'docutils:0.12',
              'six:1.9.0',
              'Babel:1.3',
              'pytz:2015.4',
              'alabaster:0.7.4',
              'sphinx_rtd_theme:0.1.8',
              'snowballstemmer:1.2.0'
            ]

jython {
    pypackage (*packages)
    
}



